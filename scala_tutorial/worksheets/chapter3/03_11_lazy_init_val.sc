/*
3.11 지연 값

특정 값을 초기화하기 위해 식을 계산하는 과정을 여러 번 반복하지 않고 단 한 번만 수행해야 하는 경우는 어떻게 할까?
  - 식의 계산이 비싸므로, 값이 실제 필요할 때까지 그 식을 계산하는 비용을 지불하고 싶지 않음
  - 즉시 필요하지 않은 작업의 실행을 미뤄서 시작하는 시간을 향상시킴
  - 다른 초기화가 먼저 일어날 수 있도록 지연시켜서 초기화
 */

object ExpensiveResource {
  lazy val resource: Int = init()
  def init(): Int = {
    // do long job
    0
  }
}

/*
  lazy keyword 는 값이 실제 필요할 때까지 계산을 유예해야 함을 표시한다.
  또한, 일반 함수와 다르게 해당 값을 처음 갖는 순간 오직 한 번만 평가된다.

  지연 값은 가드로 구현한다. 가드를 사용해서 지연값이 초기화되었는지 여부를 저장해둔 volatile 필드를 검사하고
  꼭 필요할 때만 지연값을 초기화한다. 물론 스레드 세이프하게 구현한다.
  이중 검사 락에서는 지연값이 들어있는 객체를 모니터로 사용한다. 지연값이 들어있는 객체에 대해 synchronized 를 실행하면
  데드락에 빠질 수 있다.
 */